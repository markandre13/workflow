/*
 *  workflow - A collaborative real-time white- and kanban board
 *  Copyright (C) 2018 Mark-Andr√© Hopf <mhopf@mark13.org>
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

native SVGElement;
native Point_ptr;
native Figure_ptr;
native FigureEditor;

valuetype Point {
    public double x, y;
};

valuetype Size {
    public double width, height;
};

valuetype Rectangle {
    public Point origin;
    public Size size;
};

valuetype Figure {
    public unsigned long id;
    SVGElement createSVG();
    Rectangle bounds();
    double distance(in Point point);
    Point_ptr getHandlePosition(in unsigned short handleId);
    void setHandlePosition(in unsigned short handleId, in Point position);
};

module figure {
/*
    valuetype Shape: Figure {
        public Point origin;
        public Size size;
    };

    valuetype Rectangle: Shape {
    };

    valuetype Circle: Shape {
    };
*/
    valuetype Rectangle: Figure {
        public Point origin;
        public Size size;
    };

    valuetype Text: Figure {
        public Point origin;
        public string text;
    };
};

valuetype FigureModel {
    public sequence<Figure> data;
};

valuetype Layer: FigureModel {
    public unsigned long id;
    public string name;
    Figure_ptr findFigureAt(in Point point);
};

valuetype User {
    public unsigned long uid;
    public string name;
    public string password;
    public string email;
    public string fullname;
    public string avatar;
};

valuetype Project {
    public unsigned long id;
    public string name;
    public string description;
};

valuetype Board {
    public unsigned long id;
    public string name;
    public string description;
    public sequence<Layer> layers;
};

valuetype Card {
    public unsigned long id;
    public string name;
    public string description;
};

interface Server {
    oneway void init(in string session);
    oneway void logon(in string user, in string password, in boolean remember);
};

interface Client {
    oneway void logonScreen(in unsigned long lifetime, in string disclaimer, in boolean remember, in string errorMessage);
    oneway void homeScreen(
    	in string cookie,
	in string avatar,
	in string email,
	in string fullname,
	in Board board);
};
